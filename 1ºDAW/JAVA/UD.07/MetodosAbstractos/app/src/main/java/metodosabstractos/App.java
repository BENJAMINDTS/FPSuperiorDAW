/*
 * This source file was generated by the Gradle 'init' task
 */
package metodosabstractos;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Scanner;



public class App {

    public static void main(String[] args) {

        List<Equipo> equipos = new ArrayList<>();
        try(Scanner sc = new Scanner(System.in)) {
            while (true) {
            System.out.println("Introduce una opcion: ");
            System.out.println("Añadir equipo: 1");
            System.out.println("Añadir ciclista: 2");
            System.out.println("Buscar ciclista: 3");
            System.out.println("Buscar equipo: 4");
            System.out.println("Salir: 5");
        
            int opcion = sc.nextInt();
            switch (opcion) {
                case 1:
                System.out.println("Introduce el nombre del equipo: ");
                String nombreEquipo = sc.next();
                System.out.println("Introduce el pais del equipo: ");
                String paisEquipo = sc.next();
                Equipo equipo = new Equipo(nombreEquipo, paisEquipo);
                equipos.add(equipo);
                break;
                case 2:
                System.out.println("Que tipo de ciclista quieres añadir: ");
                System.out.println("Escalador: 1");
                System.out.println("Velocista: 2");
                System.out.println("Contrarelojista: 3");
                System.out.println("Salir: 4");
                int tipoCiclista = sc.nextInt();
                switch (tipoCiclista) {
                    case 1:
                    System.out.println("Introduce el nombre del equipo: ");
                    String nomEquipo = sc.next();
                    for (Equipo equipo1 : equipos) {
                        if (equipo1.getNombre().equals(nomEquipo)) {
                        System.out.println("Introduce la identificacion del ciclista: ");
                        int identificacion = sc.nextInt();
                        System.out.println("Introduce el nombre del ciclista: ");
                        String nombre = sc.next();
                        System.out.println("Introduce la aceleracion del ciclista: ");
                        double aceleracion = sc.nextDouble();
                        System.out.println("Introduce el grado de la rampa: ");
                        double gradoRampa = sc.nextDouble();
                        Escalador escalador = new Escalador(identificacion, nombre, aceleracion, gradoRampa);
                        equipo1.getCiclistas().add(escalador);
                        } else {
                        System.out.println("Equipo no encontrado");
                        }
                    }
                    break;
                    case 2:
                    System.out.println("Introduce el nombre del equipo: ");
                    String nomEquipo2 = sc.next();
                    for (Equipo equipo1 : equipos) {
                        if (equipo1.getNombre().equals(nomEquipo2)) {
                        System.out.println("Introduce la identificacion del ciclista: ");
                        int identificacion2 = sc.nextInt();
                        System.out.println("Introduce el nombre del ciclista: ");
                        String nombre2 = sc.next();
                        System.out.println("Introduce la velocidad del ciclista: ");
                        double velocidad = sc.nextDouble();
                        System.out.println("Introduce el tiempo de sprint: ");
                        double tiempoSprint = sc.nextDouble();
                        Velocista velocista = new Velocista(identificacion2, nombre2, velocidad, tiempoSprint);
                        equipo1.getCiclistas().add(velocista);
                        } else {
                        System.out.println("Equipo no encontrado");
                        }
                    }
                    break;
                    case 3:
                    System.out.println("Introduce el nombre del equipo: ");
                    String nomEquipo3 = sc.next();
                    for (Equipo equipo1 : equipos) {
                        if (equipo1.getNombre().equals(nomEquipo3)) {
                        System.out.println("Introduce la identificacion del ciclista: ");
                        int identificacion3 = sc.nextInt();
                        System.out.println("Introduce el nombre del ciclista: ");
                        String nombre3 = sc.next();
                        System.out.println("Introduce la velocidad maxima del ciclista: ");
                        double velocidadMaxima = sc.nextDouble();
                        Contrarelojista contrarelojista = new Contrarelojista(identificacion3, nombre3, velocidadMaxima);
                        equipo1.getCiclistas().add(contrarelojista);
                        } else {
                        System.out.println("Equipo no encontrado");
                        }
                    }
                    break;
                    
                    case 4:
                    break;
                    default:
                    System.out.println("Opcion no valida");
                    break;
                }
                break;
                case 3:
                System.out.println("En que equipo quieres buscar el ciclista: ");
                String nomEquipo = sc.next();
                for (Equipo equipo2 : equipos) {
                    if (equipo2.getNombre().equals(nomEquipo)) {
                    System.out.println("Introduce la identificacion del ciclista: ");
                    int identificacion = sc.nextInt();
                    equipo2.buscarCiclista(identificacion);
                    } else {
                    System.out.println("Equipo no encontrado");
                    }
                }
                break;
                case 4:
                System.out.println("Introduce el nombre del equipo: ");
                String nomEquipos = sc.next();
                Equipo.buscarEquipo(nomEquipos);
                break;
                case 5:
                System.exit(0);
                break;
                default:
                System.out.println("Opcion no valida");
                break;
            }
            }
        } catch (InputMismatchException e) {
            System.out.println("Introduce un numero valido");
        } catch (NoSuchElementException e) {
            System.out.println("No se ha encontrado el elemento");
        } catch (IllegalStateException e) {
            System.out.println("Scanner cerrado");
        } catch (Exception e) {
            System.out.println("Ha ocurrido un error: " + e.getMessage());
        }
        

        
    }
}
